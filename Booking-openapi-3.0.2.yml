#  ___ _            _ _    _ _    __
# / __(_)_ __  _ __| (_)__(_) |_ /_/
# \__ \ | '  \| '_ \ | / _| |  _/ -_)
# |___/_|_|_|_| .__/_|_\__|_|\__\___|
#             |_| Module: Booking 0.1
components:
  schemas:
    Error404:
      type: object
      properties:
        error:
          description: Error message
          type: string
        status:
          description: Error status
          type: integer
          enum:
          - 404
    BookPaymentMethod:
      type: object
      properties:
        bookPaymCode:
          description: Code
          type: string
        row_id:
          description: Unique technical row ID
          type: string
        bookPaymLibell:
          description: Label
          type: string
    ArrayOfBookGuests:
      type: array
      items:
        $ref: '#/components/schemas/BookGuests'
    BookRoomEquipment:
      type: object
      properties:
        bookEquLibell:
          description: Label
          type: string
        row_id:
          description: Unique technical row ID
          type: string
        bookEquCode:
          description: Code
          type: string
    BookGuests:
      type: object
      properties:
        usr_home_num:
          description: Home phone
          type: string
        usr_country:
          description: Country
          type: string
          enum:
          - FR
          - UK
          - ES
          - DE
          - BE
          - CH
          - IE
          - US
          - CA
        usr_title:
          description: Title
          type: string
          enum:
          - MR
          - MRS
          - MS
        usr_zipcode:
          description: Postal/ZIP code
          type: string
        usr_address1:
          description: Address line 1
          type: string
        usr_address2:
          description: Address line 2
          type: string
        usr_last_name:
          description: Last name
          type: string
        usr_cell_num:
          description: Mobile/cellular phone number
          type: string
        usr_city:
          description: City
          type: string
        bookBookusersEmail:
          description: Email
          type: string
        bookUserGeoCoord:
          description: Geo coordinates
          type: string
          example: latitude;longitude
        row_id:
          description: Unique technical row ID
          type: string
        usr_work_num:
          description: Work phone number
          type: string
        usr_state:
          description: State
          type: string
        usr_first_name:
          description: First name
          type: string
        bookBookusersType:
          description: Type
          type: string
          enum:
          - CUS
          - ACC
    BookBookingsBookGuests:
      type: object
      properties:
        bookGuestsId__usr_first_name:
          description: First name
          type: string
        bookBookingsId__bookBookbookingsEndDate:
          description: End date
          type: string
          example: yyyy-MM-dd HH:mm:ss
        bookBookingsId__bookBookbookingsHour:
          description: Booking hour
          type: string
          example: HH:mm:ss
        bookBookingsId__bookBookingsBookUsersId__usr_first_name:
          description: First name
          type: string
        bookBookingsId__bookBookingsBookUsersId__bookBookusersEmail:
          description: Email
          type: string
        bookGuestsId__usr_last_name:
          description: Last name
          type: string
        bookBookingsId:
          description: Room
          type: string
        bookBookingsId__bookBookbookingsStartDate:
          description: Start date
          type: string
          example: yyyy-MM-dd HH:mm:ss
        bookBookingsId__bookBookingsBookUsersId:
          description: Room Book users
          type: string
        bookBookingsGuestsBookRoomId__bookRoomCode:
          description: Room Code
          type: string
        bookBookingsGuestsBookRoomId__bookRoomBookRoomTypeId__bookRoomtypType:
          description: Room Type
          type: string
        bookBookingsGuestsBookRoomId__bookRoomSuperficie:
          description: Room Surface area
          type: string
          enum:
          - '12'
          - '15'
          - '17'
          - '22'
        bookGuestsId:
          description: Guest
          type: string
        bookBookingsGuestsBookRoomId__bookRoomBookRoomTypeId:
          description: Room Room Type
          type: string
        bookBookingsId__bookBookbookingsDate:
          description: Booking date
          type: string
          example: yyyy-MM-dd
        bookBookingsId__bookBookbookingsStatut:
          description: Status
          type: string
          enum:
          - EA
          - TR
          - Cl
        bookBookingsGuestsBookRoomId__bookRoomFloor:
          description: Room Floor
          type: string
          enum:
          - '0'
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
        bookBookingsGuestsBookRoomId:
          description: Room
          type: string
        bookBookingsGuestsBookRoomId__bookRoomPhoto:
          description: Room Photo
          type: object
        bookGuestsId__bookBookusersEmail:
          description: Guest email
          type: string
        bookBookingsGuestsBookRoomId__bookRoomPriceht:
          description: Room Price
          type: number
        row_id:
          description: Unique technical row ID
          type: string
        bookBookingsId__bookBookingsBookUsersId__usr_last_name:
          description: Last name
          type: string
        bookBookingsGuestsBookRoomId__bookRoomLabel:
          description: Room Label
          type: string
    ArrayOfBookUsers:
      type: array
      items:
        $ref: '#/components/schemas/BookUsers'
    PublicationResult:
      type: object
      properties:
        mime:
          description: MIME type
          type: string
        content:
          description: Content (plain text or base64 encoded)
          type: string
    ArrayOfBookRoom:
      type: array
      items:
        $ref: '#/components/schemas/BookRoom'
    PlaceData:
      type: object
      properties:
        coord:
          description: Geographical coordinates
          type: string
        address:
          description: Address
          type: string
        row_id:
          description: Row ID
          type: string
        label1:
          description: 'Label #1'
          type: string
        label2:
          description: 'Label #2'
          type: string
        label3:
          description: 'Label #3'
          type: string
    BookRoomBookRoomService:
      type: object
      properties:
        bookroomservBookServiceId:
          description: app book room service fk
          type: string
        bookroomservBookRoomId__bookRoomCode:
          description: app book room fk Code
          type: string
        bookroomservBookRoomId:
          description: app book room fk
          type: string
        bookroomservBookServiceId__bookRservLibell:
          description: Service
          type: string
        row_id:
          description: Unique technical row ID
          type: string
        bookroomservBookRoomId__bookRoomLabel:
          description: Room
          type: string
        bookroomservBookServiceId__bookRservCode:
          description: app book room service fk Code
          type: string
    PlaceMapData:
      type: object
      properties:
        places:
          description: Places
          type: array
          items:
            $ref: '#/components/schemas/PlaceData'
        name:
          description: Name
          type: string
    BookRoom:
      type: object
      properties:
        bookRoomBookRoomTypeId:
          description: Room Type
          type: string
        bookRoomFloor:
          description: Floor
          type: string
          enum:
          - '0'
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
        bookRoomBookRoomTypeId__bookRoomtypCode:
          description: Room Type book roomtyp code
          type: string
        bookRoomLabel:
          description: Label
          type: string
        bookRoomSuperficie:
          description: Surface area
          type: string
          enum:
          - '12'
          - '15'
          - '17'
          - '22'
        bookRoomCode:
          description: Code
          type: string
        bookRoomPhoto:
          description: Photo
          type: object
        row_id:
          description: Unique technical row ID
          type: string
        bookRoomBookRoomTypeId__bookRoomtypType:
          description: Type
          type: string
        bookRoomDesc:
          description: Description
          type: string
        bookRoomPriceht:
          description: Price
          type: number
    ArrayOfBookBookingsBookGuests:
      type: array
      items:
        $ref: '#/components/schemas/BookBookingsBookGuests'
    ArrayOfBookBookings:
      type: array
      items:
        $ref: '#/components/schemas/BookBookings'
    Error400:
      type: object
      properties:
        error:
          description: Error message
          type: string
        status:
          description: Error status
          type: integer
          enum:
          - 400
    Error401:
      type: object
      properties:
        error:
          description: Error message
          type: string
        status:
          description: Error status
          type: integer
          enum:
          - 401
    Error500:
      type: object
      properties:
        error:
          description: Error message
          type: string
        status:
          description: Error status
          type: integer
          enum:
          - 500
    Error403:
      type: object
      properties:
        error:
          description: Error message
          type: string
        status:
          description: Error status
          type: integer
          enum:
          - 403
    ArrayOfBookPaymentMethod:
      type: array
      items:
        $ref: '#/components/schemas/BookPaymentMethod'
    ArrayOfBookRoomEquipment:
      type: array
      items:
        $ref: '#/components/schemas/BookRoomEquipment'
    ArrayOfBookRoomType:
      type: array
      items:
        $ref: '#/components/schemas/BookRoomType'
    ArrayOfBookRoomBookRoomService:
      type: array
      items:
        $ref: '#/components/schemas/BookRoomBookRoomService'
    ArrayOfBookEquRoom:
      type: array
      items:
        $ref: '#/components/schemas/BookEquRoom'
    BookEquRoom:
      type: object
      properties:
        bookEquroomRoomId:
          description: book equroom room id
          type: string
        bookEquroomEquId__bookEquCode:
          description: book equroom equ id Code
          type: string
        bookEquroomEquId:
          description: book equroom equ id
          type: string
        bookEquroomEquId__bookEquLibell:
          description: Equipment label
          type: string
        bookEquroomRoomId__bookRoomCode:
          description: book equroom room id Code
          type: string
        bookEquroomRoomId__bookRoomLabel:
          description: Room label
          type: string
        row_id:
          description: Unique technical row ID
          type: string
    BookBookings:
      type: object
      properties:
        bookBookbookingsGuestNumber:
          description: Number of people
          type: string
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
        bookBookbookingsDate:
          description: Booking date
          type: string
          example: yyyy-MM-dd
        bookBookbookingsPaymentTDate:
          description: Total payment date
          type: string
          example: yyyy-MM-dd
        bookBookbookingsComments:
          description: Comments
          type: string
        bookBookingsBookUsersId__usr_title:
          description: Title
          type: string
          enum:
          - MR
          - MRS
          - MS
        bookBookbookingsStatut:
          description: Status
          type: string
          enum:
          - EA
          - TR
          - Cl
        bookBookingsBookUsersId:
          description: Book users
          type: string
        bookBookbookingsPaymentDone:
          description: Payment done ?
          type: boolean
        bookBookbookingsHour:
          description: Booking hour
          type: string
          example: HH:mm:ss
        bookBookbookingsStartDate:
          description: Start date
          type: string
          example: yyyy-MM-dd HH:mm:ss
        bookBookbookingsRoomNumber:
          description: Number oof rooms
          type: string
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
        bookBookingsBookUsersId__usr_first_name:
          description: First name
          type: string
        bookBookbookingsAmountDate:
          description: Account date
          type: string
          example: yyyy-MM-dd
        bookBookingsBookUsersId__bookBookusersEmail:
          description: Email
          type: string
        bookBookbookingsEndDate:
          description: End date
          type: string
          example: yyyy-MM-dd HH:mm:ss
        row_id:
          description: Unique technical row ID
          type: string
        bookBookingsBookUsersId__usr_last_name:
          description: Last name
          type: string
    BookBookingsHistoric:
      type: object
      properties:
        bookBookbookingsGuestNumber:
          description: Number of people
          type: string
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
        bookBookbookingsDate:
          description: Booking date
          type: string
          example: yyyy-MM-dd
        bookBookbookingsPaymentTDate:
          description: Total payment date
          type: string
          example: yyyy-MM-dd
        bookBookbookingsComments:
          description: Comments
          type: string
        created_dt_hist:
          description: Created date
          type: string
          example: yyyy-MM-dd HH:mm:ss
        bookBookingsBookUsersId__usr_title:
          description: Title
          type: string
          enum:
          - MR
          - MRS
          - MS
        bookBookbookingsStatut:
          description: Status
          type: string
          enum:
          - EA
          - TR
          - Cl
        row_ref_id:
          description: Record row ID
          type: string
        bookBookingsBookUsersId:
          description: Book users
          type: string
        bookBookbookingsPaymentDone:
          description: Payment done ?
          type: boolean
        bookBookbookingsHour:
          description: Booking hour
          type: string
          example: HH:mm:ss
        row_idx:
          description: History record index
          type: integer
        bookBookbookingsStartDate:
          description: Start date
          type: string
          example: yyyy-MM-dd HH:mm:ss
        bookBookbookingsRoomNumber:
          description: Number oof rooms
          type: string
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
        bookBookingsBookUsersId__usr_first_name:
          description: First name
          type: string
        bookBookbookingsAmountDate:
          description: Account date
          type: string
          example: yyyy-MM-dd
        bookBookingsBookUsersId__bookBookusersEmail:
          description: Book users Email
          type: string
        bookBookbookingsEndDate:
          description: End date
          type: string
          example: yyyy-MM-dd HH:mm:ss
        row_id:
          description: Unique technical row ID
          type: string
        bookBookingsBookUsersId__usr_last_name:
          description: Last name
          type: string
        created_by_hist:
          description: Created by
          type: string
    BookUsers:
      type: object
      properties:
        usr_home_num:
          description: Home phone
          type: string
        usr_country:
          description: Country
          type: string
          enum:
          - FR
          - UK
          - ES
          - DE
          - BE
          - CH
          - IE
          - US
          - CA
        usr_title:
          description: Title
          type: string
          enum:
          - MR
          - MRS
          - MS
        usr_zipcode:
          description: Postal/ZIP code
          type: string
        usr_address1:
          description: Address line 1
          type: string
        usr_address2:
          description: Address line 2
          type: string
        usr_last_name:
          description: Last name
          type: string
        usr_cell_num:
          description: Mobile/cellular phone number
          type: string
        usr_city:
          description: City
          type: string
        bookBookusersEmail:
          description: Email
          type: string
        bookUserGeoCoord:
          description: Geo coordinates
          type: string
          example: latitude;longitude
        row_id:
          description: Unique technical row ID
          type: string
        usr_work_num:
          description: Work phone number
          type: string
        usr_state:
          description: State
          type: string
        usr_first_name:
          description: First name
          type: string
        bookBookusersType:
          description: Type
          type: string
          enum:
          - CUS
          - ACC
    ArrayOfBookPayments:
      type: array
      items:
        $ref: '#/components/schemas/BookPayments'
    BookRoomType:
      type: object
      properties:
        bookRoomtypCode:
          description: book roomtyp code
          type: string
        row_id:
          description: Unique technical row ID
          type: string
        bookRoomtypType:
          description: Type
          type: string
    ActionResult:
      type: object
      properties:
        result:
          description: Action result
          type: string
    ArrayOfBookBookingsHistoric:
      type: array
      items:
        $ref: '#/components/schemas/BookBookingsHistoric'
    TreeviewData:
      type: object
      properties:
        item:
          description: Object item with lists of linked objects' items
          type: object
    BookPayments:
      type: object
      properties:
        bookPayAmount:
          description: Amount
          type: number
        bookPaymentsBookBookingsId__bookBookingsBookUsersId__usr_title:
          description: Title
          type: string
          enum:
          - MR
          - MRS
          - MS
        bookPaymentsBookBookingsId__bookBookingsBookUsersId:
          description: Booking|Bookings Book users
          type: string
        bookPaymentsBookBookingsId__bookBookbookingsStartDate:
          description: Start date
          type: string
          example: yyyy-MM-dd HH:mm:ss
        bookPayPaymId__bookPaymCode:
          description: Payment method Code
          type: string
        bookPaymentsBookBookingsId__bookBookingsBookUsersId__usr_first_name:
          description: First name
          type: string
        bookPaymentsBookBookingsId__bookBookbookingsEndDate:
          description: End date
          type: string
          example: yyyy-MM-dd HH:mm:ss
        bookPaymentsBookBookingsId__bookBookingsBookUsersId__usr_last_name:
          description: Last name
          type: string
        bookPaymentsBookBookingsId__bookBookbookingsDate:
          description: Booking date
          type: string
          example: yyyy-MM-dd
        bookPayPaymId:
          description: Payment method
          type: string
        row_id:
          description: Unique technical row ID
          type: string
        bookPaymentsBookBookingsId:
          description: Booking|Bookings
          type: string
        bookPaymentsBookBookingsId__bookBookbookingsHour:
          description: Booking hour
          type: string
          example: HH:mm:ss
        bookPayComments:
          description: Comments
          type: string
        bookPayPaymId__bookPaymLibell:
          description: Payment method Label
          type: string
        bookPaymentsBookBookingsId__bookBookingsBookUsersId__bookBookusersEmail:
          description: Email
          type: string
    BookRoomService:
      type: object
      properties:
        bookRservCode:
          description: Code
          type: string
        row_id:
          description: Unique technical row ID
          type: string
        bookRservLibell:
          description: Label
          type: string
    ArrayOfBookRoomService:
      type: array
      items:
        $ref: '#/components/schemas/BookRoomService'
  securitySchemes:
    basicAuth:
      scheme: basic
      type: http
    bearerAuth:
      bearerFormat: Simplicite token
      scheme: bearer
      type: http
openapi: 3.0.2
paths:
  /rest/BookPaymentMethod/{row_id}:
    post:
      summary: Create a new BookPaymentMethodbusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookPaymentMethod'
      operationId: obj-bookpaymentmethod-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookPaymentMethod'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookPaymentMethod
    get:
      summary: Get a BookPaymentMethod business object record
      security:
      - bearerAuth: []
      operationId: obj-bookpaymentmethod-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookPaymentMethod'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - BookPaymentMethod
    delete:
      summary: Delete a BookPaymentMethod business object record
      security:
      - bearerAuth: []
      operationId: obj-bookpaymentmethod-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookPaymentMethod
    put:
      summary: Update a BookPaymentMethodbusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookPaymentMethod'
      operationId: obj-bookpaymentmethod-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookPaymentMethod'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookPaymentMethod
  /rest/BookRoom:
    get:
      summary: Search BookRoom business object records or get contextualized metadata
      security:
      - bearerAuth: []
      operationId: obj-bookroom-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfBookRoom'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
        in: query
        name: bookRoomCode
        description: Search filter for Code
        required: false
      - schema:
          type: string
        in: query
        name: bookRoomLabel
        description: Search filter for Label
        required: false
      - schema:
          type: string
        in: query
        name: bookRoomBookRoomTypeId
        description: Search filter for Room Type
        required: false
      - schema:
          type: string
        in: query
        name: bookRoomBookRoomTypeId__bookRoomtypCode
        description: Search filter for Room Type book roomtyp code
        required: false
      - schema:
          type: string
        in: query
        name: bookRoomBookRoomTypeId__bookRoomtypType
        description: Search filter for Type
        required: false
      - schema:
          type: string
        in: query
        name: bookRoomDesc
        description: Search filter for Description
        required: false
      - schema:
          type: string
          enum:
          - '12'
          - '15'
          - '17'
          - '22'
        in: query
        name: bookRoomSuperficie
        description: Search filter for Surface area
        required: false
      - schema:
          type: string
          enum:
          - '0'
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
        in: query
        name: bookRoomFloor
        description: Search filter for Floor
        required: false
      - schema:
          type: string
        in: query
        name: bookRoomPhoto
        description: Search filter for Photo
        required: false
      - schema:
          type: number
        in: query
        name: bookRoomPriceht
        description: Search filter for Price
        required: false
      tags:
      - BookRoom
  /login:
    get:
      summary: Login (obtain bearer token)
      security:
      - basicAuth: []
      operationId: login
      responses:
        '200':
          description: Successful login
          content:
            application/json: {}
            text/plain: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
      parameters:
      - schema:
          type: string
          enum:
          - json
          - oauth2
          - token
        in: query
        name: _output
        description: Optional output format
        required: false
      tags:
      - session
  /rest/BookRoomBookRoomService/{row_id}:
    post:
      summary: Create a new BookRoomBookRoomServicebusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookRoomBookRoomService'
      operationId: obj-bookroombookroomservice-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookRoomBookRoomService'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookRoomBookRoomService
    get:
      summary: Get a BookRoomBookRoomService business object record
      security:
      - bearerAuth: []
      operationId: obj-bookroombookroomservice-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookRoomBookRoomService'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - BookRoomBookRoomService
    delete:
      summary: Delete a BookRoomBookRoomService business object record
      security:
      - bearerAuth: []
      operationId: obj-bookroombookroomservice-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookRoomBookRoomService
    put:
      summary: Update a BookRoomBookRoomServicebusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookRoomBookRoomService'
      operationId: obj-bookroombookroomservice-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookRoomBookRoomService'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookRoomBookRoomService
  /rest/BookGuests:
    get:
      summary: Search BookGuests business object records or get contextualized metadata
      security:
      - bearerAuth: []
      operationId: obj-bookguests-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfBookGuests'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
          enum:
          - MR
          - MRS
          - MS
        in: query
        name: usr_title
        description: Search filter for Title
        required: false
      - schema:
          type: string
        in: query
        name: usr_last_name
        description: Search filter for Last name
        required: false
      - schema:
          type: string
        in: query
        name: usr_first_name
        description: Search filter for First name
        required: false
      - schema:
          type: string
        in: query
        name: usr_work_num
        description: Search filter for Work phone number
        required: false
      - schema:
          type: string
        in: query
        name: usr_home_num
        description: Search filter for Home phone
        required: false
      - schema:
          type: string
        in: query
        name: usr_cell_num
        description: Search filter for Mobile/cellular phone number
        required: false
      - schema:
          type: string
        in: query
        name: usr_address1
        description: Search filter for Address line 1
        required: false
      - schema:
          type: string
        in: query
        name: usr_address2
        description: Search filter for Address line 2
        required: false
      - schema:
          type: string
        in: query
        name: usr_zipcode
        description: Search filter for Postal/ZIP code
        required: false
      - schema:
          type: string
        in: query
        name: usr_city
        description: Search filter for City
        required: false
      - schema:
          type: string
        in: query
        name: usr_state
        description: Search filter for State
        required: false
      - schema:
          type: string
          enum:
          - FR
          - UK
          - ES
          - DE
          - BE
          - CH
          - IE
          - US
          - CA
        in: query
        name: usr_country
        description: Search filter for Country
        required: false
      - schema:
          type: string
        in: query
        name: bookBookusersEmail
        description: Search filter for Email
        required: false
      - schema:
          type: string
          enum:
          - CUS
          - ACC
        in: query
        name: bookBookusersType
        description: Search filter for Type
        required: false
      - schema:
          type: string
        in: query
        name: bookUserGeoCoord
        description: Search filter for Geo coordinates
        required: false
      tags:
      - BookGuests
  /rest/BookRoomEquipment:
    get:
      summary: Search BookRoomEquipment business object records or get contextualized
        metadata
      security:
      - bearerAuth: []
      operationId: obj-bookroomequipment-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfBookRoomEquipment'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
        in: query
        name: bookEquLibell
        description: Search filter for Label
        required: false
      - schema:
          type: string
        in: query
        name: bookEquCode
        description: Search filter for Code
        required: false
      tags:
      - BookRoomEquipment
  /rest/BookRoomBookRoomService:
    get:
      summary: Search BookRoomBookRoomService business object records or get contextualized
        metadata
      security:
      - bearerAuth: []
      operationId: obj-bookroombookroomservice-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfBookRoomBookRoomService'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
        in: query
        name: bookroomservBookRoomId
        description: Search filter for app book room fk
        required: false
      - schema:
          type: string
        in: query
        name: bookroomservBookRoomId__bookRoomCode
        description: Search filter for app book room fk Code
        required: false
      - schema:
          type: string
        in: query
        name: bookroomservBookRoomId__bookRoomLabel
        description: Search filter for Room
        required: false
      - schema:
          type: string
        in: query
        name: bookroomservBookServiceId
        description: Search filter for app book room service fk
        required: false
      - schema:
          type: string
        in: query
        name: bookroomservBookServiceId__bookRservCode
        description: Search filter for app book room service fk Code
        required: false
      - schema:
          type: string
        in: query
        name: bookroomservBookServiceId__bookRservLibell
        description: Search filter for Service
        required: false
      tags:
      - BookRoomBookRoomService
  /rest/BookEquRoom:
    get:
      summary: Search BookEquRoom business object records or get contextualized metadata
      security:
      - bearerAuth: []
      operationId: obj-bookequroom-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfBookEquRoom'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
        in: query
        name: bookEquroomEquId
        description: Search filter for book equroom equ id
        required: false
      - schema:
          type: string
        in: query
        name: bookEquroomEquId__bookEquCode
        description: Search filter for book equroom equ id Code
        required: false
      - schema:
          type: string
        in: query
        name: bookEquroomEquId__bookEquLibell
        description: Search filter for Equipment label
        required: false
      - schema:
          type: string
        in: query
        name: bookEquroomRoomId
        description: Search filter for book equroom room id
        required: false
      - schema:
          type: string
        in: query
        name: bookEquroomRoomId__bookRoomCode
        description: Search filter for book equroom room id Code
        required: false
      - schema:
          type: string
        in: query
        name: bookEquroomRoomId__bookRoomLabel
        description: Search filter for Room label
        required: false
      tags:
      - BookEquRoom
  /rest/BookRoom/{row_id}:
    post:
      summary: Create a new BookRoombusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookRoom'
      operationId: obj-bookroom-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookRoom'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookRoom
    get:
      summary: Get a BookRoom business object record
      security:
      - bearerAuth: []
      operationId: obj-bookroom-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookRoom'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - BookRoom
    delete:
      summary: Delete a BookRoom business object record
      security:
      - bearerAuth: []
      operationId: obj-bookroom-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookRoom
    put:
      summary: Update a BookRoombusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookRoom'
      operationId: obj-bookroom-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookRoom'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookRoom
  /rest/BookBookingsBookGuests/{row_id}:
    post:
      summary: Create a new BookBookingsBookGuestsbusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookBookingsBookGuests'
      operationId: obj-bookbookingsbookguests-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookBookingsBookGuests'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookBookingsBookGuests
    get:
      summary: Get a BookBookingsBookGuests business object record
      security:
      - bearerAuth: []
      operationId: obj-bookbookingsbookguests-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookBookingsBookGuests'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - BookBookingsBookGuests
    delete:
      summary: Delete a BookBookingsBookGuests business object record
      security:
      - bearerAuth: []
      operationId: obj-bookbookingsbookguests-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookBookingsBookGuests
    put:
      summary: Update a BookBookingsBookGuestsbusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookBookingsBookGuests'
      operationId: obj-bookbookingsbookguests-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookBookingsBookGuests'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookBookingsBookGuests
  /rest/BookBookings:
    get:
      summary: Search BookBookings business object records or get contextualized metadata
      security:
      - bearerAuth: []
      operationId: obj-bookbookings-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfBookBookings'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
        in: query
        name: bookBookingsBookUsersId
        description: Search filter for Book users
        required: false
      - schema:
          type: string
          enum:
          - MR
          - MRS
          - MS
        in: query
        name: bookBookingsBookUsersId__usr_title
        description: Search filter for Title
        required: false
      - schema:
          type: string
        in: query
        name: bookBookingsBookUsersId__usr_last_name
        description: Search filter for Last name
        required: false
      - schema:
          type: string
        in: query
        name: bookBookingsBookUsersId__usr_first_name
        description: Search filter for First name
        required: false
      - schema:
          type: string
        in: query
        name: bookBookingsBookUsersId__bookBookusersEmail
        description: Search filter for Email
        required: false
      - schema:
          type: string
        in: query
        name: bookBookbookingsDate
        description: Search filter for Booking date
        required: false
      - schema:
          type: string
        in: query
        name: bookBookbookingsHour
        description: Search filter for Booking hour
        required: false
      - schema:
          type: string
        in: query
        name: bookBookbookingsStartDate
        description: Search filter for Start date
        required: false
      - schema:
          type: string
        in: query
        name: bookBookbookingsEndDate
        description: Search filter for End date
        required: false
      - schema:
          type: string
        in: query
        name: bookBookbookingsPaymentTDate
        description: Search filter for Total payment date
        required: false
      - schema:
          type: string
        in: query
        name: bookBookbookingsAmountDate
        description: Search filter for Account date
        required: false
      - schema:
          type: boolean
        in: query
        name: bookBookbookingsPaymentDone
        description: Search filter for Payment done ?
        required: false
      - schema:
          type: string
        in: query
        name: bookBookbookingsComments
        description: Search filter for Comments
        required: false
      - schema:
          type: string
          enum:
          - EA
          - TR
          - Cl
        in: query
        name: bookBookbookingsStatut
        description: Search filter for Status
        required: false
      - schema:
          type: string
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
        in: query
        name: bookBookbookingsRoomNumber
        description: Search filter for Number oof rooms
        required: false
      - schema:
          type: string
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
        in: query
        name: bookBookbookingsGuestNumber
        description: Search filter for Number of people
        required: false
      tags:
      - BookBookings
  /rest/BookRoomType/{row_id}:
    post:
      summary: Create a new BookRoomTypebusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookRoomType'
      operationId: obj-bookroomtype-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookRoomType'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookRoomType
    get:
      summary: Get a BookRoomType business object record
      security:
      - bearerAuth: []
      operationId: obj-bookroomtype-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookRoomType'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - BookRoomType
    delete:
      summary: Delete a BookRoomType business object record
      security:
      - bearerAuth: []
      operationId: obj-bookroomtype-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookRoomType
    put:
      summary: Update a BookRoomTypebusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookRoomType'
      operationId: obj-bookroomtype-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookRoomType'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookRoomType
  /rest/BookUsers:
    get:
      summary: Search BookUsers business object records or get contextualized metadata
      security:
      - bearerAuth: []
      operationId: obj-bookusers-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfBookUsers'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
          enum:
          - MR
          - MRS
          - MS
        in: query
        name: usr_title
        description: Search filter for Title
        required: false
      - schema:
          type: string
        in: query
        name: usr_last_name
        description: Search filter for Last name
        required: false
      - schema:
          type: string
        in: query
        name: usr_first_name
        description: Search filter for First name
        required: false
      - schema:
          type: string
        in: query
        name: usr_work_num
        description: Search filter for Work phone number
        required: false
      - schema:
          type: string
        in: query
        name: usr_home_num
        description: Search filter for Home phone
        required: false
      - schema:
          type: string
        in: query
        name: usr_cell_num
        description: Search filter for Mobile/cellular phone number
        required: false
      - schema:
          type: string
        in: query
        name: usr_address1
        description: Search filter for Address line 1
        required: false
      - schema:
          type: string
        in: query
        name: usr_address2
        description: Search filter for Address line 2
        required: false
      - schema:
          type: string
        in: query
        name: usr_zipcode
        description: Search filter for Postal/ZIP code
        required: false
      - schema:
          type: string
        in: query
        name: usr_city
        description: Search filter for City
        required: false
      - schema:
          type: string
        in: query
        name: usr_state
        description: Search filter for State
        required: false
      - schema:
          type: string
          enum:
          - FR
          - UK
          - ES
          - DE
          - BE
          - CH
          - IE
          - US
          - CA
        in: query
        name: usr_country
        description: Search filter for Country
        required: false
      - schema:
          type: string
        in: query
        name: bookBookusersEmail
        description: Search filter for Email
        required: false
      - schema:
          type: string
          enum:
          - CUS
          - ACC
        in: query
        name: bookBookusersType
        description: Search filter for Type
        required: false
      - schema:
          type: string
        in: query
        name: bookUserGeoCoord
        description: Search filter for Geo coordinates
        required: false
      tags:
      - BookUsers
  /rest/BookRoomService:
    get:
      summary: Search BookRoomService business object records or get contextualized
        metadata
      security:
      - bearerAuth: []
      operationId: obj-bookroomservice-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfBookRoomService'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
        in: query
        name: bookRservCode
        description: Search filter for Code
        required: false
      - schema:
          type: string
        in: query
        name: bookRservLibell
        description: Search filter for Label
        required: false
      tags:
      - BookRoomService
  /rest/BookUsers/{row_id}/placemap:BookUsersMaps:
    get:
      summary: Call a place map for BookUsers business object
      security:
      - bearerAuth: []
      operationId: obj-bookusers-placemap-bookusersmaps
      responses:
        '200':
          description: Success in calling the place map adat
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaceMapData'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookUsers
  /rest/BookEquRoom/{row_id}:
    post:
      summary: Create a new BookEquRoombusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookEquRoom'
      operationId: obj-bookequroom-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookEquRoom'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookEquRoom
    get:
      summary: Get a BookEquRoom business object record
      security:
      - bearerAuth: []
      operationId: obj-bookequroom-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookEquRoom'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - BookEquRoom
    delete:
      summary: Delete a BookEquRoom business object record
      security:
      - bearerAuth: []
      operationId: obj-bookequroom-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookEquRoom
    put:
      summary: Update a BookEquRoombusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookEquRoom'
      operationId: obj-bookequroom-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookEquRoom'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookEquRoom
  /rest/BookUsers/{row_id}:
    post:
      summary: Create a new BookUsersbusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookUsers'
      operationId: obj-bookusers-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookUsers'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookUsers
    get:
      summary: Get a BookUsers business object record
      security:
      - bearerAuth: []
      operationId: obj-bookusers-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookUsers'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - BookUsers
    delete:
      summary: Delete a BookUsers business object record
      security:
      - bearerAuth: []
      operationId: obj-bookusers-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookUsers
    put:
      summary: Update a BookUsersbusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookUsers'
      operationId: obj-bookusers-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookUsers'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookUsers
  /rest/BookRoomService/{row_id}:
    post:
      summary: Create a new BookRoomServicebusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookRoomService'
      operationId: obj-bookroomservice-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookRoomService'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookRoomService
    get:
      summary: Get a BookRoomService business object record
      security:
      - bearerAuth: []
      operationId: obj-bookroomservice-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookRoomService'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - BookRoomService
    delete:
      summary: Delete a BookRoomService business object record
      security:
      - bearerAuth: []
      operationId: obj-bookroomservice-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookRoomService
    put:
      summary: Update a BookRoomServicebusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookRoomService'
      operationId: obj-bookroomservice-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookRoomService'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookRoomService
  /rest/BookPaymentMethod:
    get:
      summary: Search BookPaymentMethod business object records or get contextualized
        metadata
      security:
      - bearerAuth: []
      operationId: obj-bookpaymentmethod-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfBookPaymentMethod'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
        in: query
        name: bookPaymCode
        description: Search filter for Code
        required: false
      - schema:
          type: string
        in: query
        name: bookPaymLibell
        description: Search filter for Label
        required: false
      tags:
      - BookPaymentMethod
  /rest/BookBookings/{row_id}:
    post:
      summary: Create a new BookBookingsbusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookBookings'
      operationId: obj-bookbookings-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookBookings'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookBookings
    get:
      summary: Get a BookBookings business object record
      security:
      - bearerAuth: []
      operationId: obj-bookbookings-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookBookings'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - BookBookings
    delete:
      summary: Delete a BookBookings business object record
      security:
      - bearerAuth: []
      operationId: obj-bookbookings-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookBookings
    put:
      summary: Update a BookBookingsbusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookBookings'
      operationId: obj-bookbookings-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookBookings'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookBookings
  /rest/BookRoomEquipment/{row_id}:
    post:
      summary: Create a new BookRoomEquipmentbusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookRoomEquipment'
      operationId: obj-bookroomequipment-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookRoomEquipment'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookRoomEquipment
    get:
      summary: Get a BookRoomEquipment business object record
      security:
      - bearerAuth: []
      operationId: obj-bookroomequipment-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookRoomEquipment'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - BookRoomEquipment
    delete:
      summary: Delete a BookRoomEquipment business object record
      security:
      - bearerAuth: []
      operationId: obj-bookroomequipment-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookRoomEquipment
    put:
      summary: Update a BookRoomEquipmentbusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookRoomEquipment'
      operationId: obj-bookroomequipment-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookRoomEquipment'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookRoomEquipment
  /logout:
    get:
      summary: Logout (revoke bearer token)
      security:
      - bearerAuth: []
      operationId: logout
      responses:
        '200':
          description: Successfull logout
          content:
            application/json: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
      tags:
      - session
  /rest/BookGuests/{row_id}:
    post:
      summary: Create a new BookGuestsbusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookGuests'
      operationId: obj-bookguests-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookGuests'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookGuests
    get:
      summary: Get a BookGuests business object record
      security:
      - bearerAuth: []
      operationId: obj-bookguests-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookGuests'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - BookGuests
    delete:
      summary: Delete a BookGuests business object record
      security:
      - bearerAuth: []
      operationId: obj-bookguests-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookGuests
    put:
      summary: Update a BookGuestsbusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookGuests'
      operationId: obj-bookguests-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookGuests'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookGuests
  /rest/BookPayments:
    get:
      summary: Search BookPayments business object records or get contextualized metadata
      security:
      - bearerAuth: []
      operationId: obj-bookpayments-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfBookPayments'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
        in: query
        name: bookPaymentsBookBookingsId
        description: Search filter for Booking|Bookings
        required: false
      - schema:
          type: string
        in: query
        name: bookPaymentsBookBookingsId__bookBookingsBookUsersId
        description: Search filter for Booking|Bookings Book users
        required: false
      - schema:
          type: string
        in: query
        name: bookPaymentsBookBookingsId__bookBookbookingsDate
        description: Search filter for Booking date
        required: false
      - schema:
          type: string
        in: query
        name: bookPaymentsBookBookingsId__bookBookbookingsHour
        description: Search filter for Booking hour
        required: false
      - schema:
          type: string
          enum:
          - MR
          - MRS
          - MS
        in: query
        name: bookPaymentsBookBookingsId__bookBookingsBookUsersId__usr_title
        description: Search filter for Title
        required: false
      - schema:
          type: string
        in: query
        name: bookPaymentsBookBookingsId__bookBookingsBookUsersId__usr_last_name
        description: Search filter for Last name
        required: false
      - schema:
          type: string
        in: query
        name: bookPaymentsBookBookingsId__bookBookingsBookUsersId__usr_first_name
        description: Search filter for First name
        required: false
      - schema:
          type: string
        in: query
        name: bookPaymentsBookBookingsId__bookBookingsBookUsersId__bookBookusersEmail
        description: Search filter for Email
        required: false
      - schema:
          type: string
        in: query
        name: bookPaymentsBookBookingsId__bookBookbookingsStartDate
        description: Search filter for Start date
        required: false
      - schema:
          type: string
        in: query
        name: bookPaymentsBookBookingsId__bookBookbookingsEndDate
        description: Search filter for End date
        required: false
      - schema:
          type: string
        in: query
        name: bookPayPaymId
        description: Search filter for Payment method
        required: false
      - schema:
          type: string
        in: query
        name: bookPayPaymId__bookPaymCode
        description: Search filter for Payment method Code
        required: false
      - schema:
          type: string
        in: query
        name: bookPayPaymId__bookPaymLibell
        description: Search filter for Payment method Label
        required: false
      - schema:
          type: number
        in: query
        name: bookPayAmount
        description: Search filter for Amount
        required: false
      - schema:
          type: string
        in: query
        name: bookPayComments
        description: Search filter for Comments
        required: false
      tags:
      - BookPayments
  /rest/BookBookingsHistoric:
    get:
      summary: Search BookBookingsHistoric business object records or get contextualized
        metadata
      security:
      - bearerAuth: []
      operationId: obj-bookbookingshistoric-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfBookBookingsHistoric'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
        in: query
        name: row_ref_id
        description: Search filter for Record row ID
        required: false
      - schema:
          type: integer
        in: query
        name: row_idx
        description: Search filter for History record index
        required: false
      - schema:
          type: string
        in: query
        name: created_by_hist
        description: Search filter for Created by
        required: false
      - schema:
          type: string
        in: query
        name: created_dt_hist
        description: Search filter for Created date
        required: false
      - schema:
          type: string
        in: query
        name: bookBookingsBookUsersId
        description: Search filter for Book users
        required: false
      - schema:
          type: string
          enum:
          - MR
          - MRS
          - MS
        in: query
        name: bookBookingsBookUsersId__usr_title
        description: Search filter for Title
        required: false
      - schema:
          type: string
        in: query
        name: bookBookingsBookUsersId__usr_last_name
        description: Search filter for Last name
        required: false
      - schema:
          type: string
        in: query
        name: bookBookingsBookUsersId__usr_first_name
        description: Search filter for First name
        required: false
      - schema:
          type: string
        in: query
        name: bookBookingsBookUsersId__bookBookusersEmail
        description: Search filter for Book users Email
        required: false
      - schema:
          type: string
        in: query
        name: bookBookbookingsDate
        description: Search filter for Booking date
        required: false
      - schema:
          type: string
        in: query
        name: bookBookbookingsHour
        description: Search filter for Booking hour
        required: false
      - schema:
          type: string
        in: query
        name: bookBookbookingsStartDate
        description: Search filter for Start date
        required: false
      - schema:
          type: string
        in: query
        name: bookBookbookingsEndDate
        description: Search filter for End date
        required: false
      - schema:
          type: string
        in: query
        name: bookBookbookingsPaymentTDate
        description: Search filter for Total payment date
        required: false
      - schema:
          type: string
        in: query
        name: bookBookbookingsAmountDate
        description: Search filter for Account date
        required: false
      - schema:
          type: boolean
        in: query
        name: bookBookbookingsPaymentDone
        description: Search filter for Payment done ?
        required: false
      - schema:
          type: string
        in: query
        name: bookBookbookingsComments
        description: Search filter for Comments
        required: false
      - schema:
          type: string
          enum:
          - EA
          - TR
          - Cl
        in: query
        name: bookBookbookingsStatut
        description: Search filter for Status
        required: false
      - schema:
          type: string
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
        in: query
        name: bookBookbookingsRoomNumber
        description: Search filter for Number oof rooms
        required: false
      - schema:
          type: string
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
        in: query
        name: bookBookbookingsGuestNumber
        description: Search filter for Number of people
        required: false
      tags:
      - BookBookingsHistoric
  /rest/BookRoomType:
    get:
      summary: Search BookRoomType business object records or get contextualized metadata
      security:
      - bearerAuth: []
      operationId: obj-bookroomtype-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfBookRoomType'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
        in: query
        name: bookRoomtypCode
        description: Search filter for book roomtyp code
        required: false
      - schema:
          type: string
        in: query
        name: bookRoomtypType
        description: Search filter for Type
        required: false
      tags:
      - BookRoomType
  /:
    get:
      summary: Get user session information
      security:
      - bearerAuth: []
      operationId: info
      responses:
        '200':
          description: Success in getting user session information
          content:
            application/json: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
      parameters:
      - schema:
          type: boolean
        in: query
        name: texts
        description: Texts?
        required: false
      tags:
      - session
  /rest/BookBookingsBookGuests:
    get:
      summary: Search BookBookingsBookGuests business object records or get contextualized
        metadata
      security:
      - bearerAuth: []
      operationId: obj-bookbookingsbookguests-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfBookBookingsBookGuests'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
          enum:
          - BookBookings-TC
        in: query
        name: _crosstab
        description: Apply pivot table
        required: false
      - schema:
          type: boolean
        in: query
        name: _crosstabcubes
        description: Pivot table data as cubes?
        required: false
      - schema:
          type: string
        in: query
        name: bookBookingsId
        description: Search filter for Room
        required: false
      - schema:
          type: string
        in: query
        name: bookBookingsId__bookBookingsBookUsersId
        description: Search filter for Room Book users
        required: false
      - schema:
          type: string
        in: query
        name: bookBookingsId__bookBookingsBookUsersId__usr_last_name
        description: Search filter for Last name
        required: false
      - schema:
          type: string
        in: query
        name: bookBookingsId__bookBookingsBookUsersId__usr_first_name
        description: Search filter for First name
        required: false
      - schema:
          type: string
        in: query
        name: bookBookingsId__bookBookingsBookUsersId__bookBookusersEmail
        description: Search filter for Email
        required: false
      - schema:
          type: string
        in: query
        name: bookBookingsId__bookBookbookingsDate
        description: Search filter for Booking date
        required: false
      - schema:
          type: string
        in: query
        name: bookBookingsId__bookBookbookingsHour
        description: Search filter for Booking hour
        required: false
      - schema:
          type: string
        in: query
        name: bookBookingsId__bookBookbookingsStartDate
        description: Search filter for Start date
        required: false
      - schema:
          type: string
        in: query
        name: bookBookingsId__bookBookbookingsEndDate
        description: Search filter for End date
        required: false
      - schema:
          type: string
          enum:
          - EA
          - TR
          - Cl
        in: query
        name: bookBookingsId__bookBookbookingsStatut
        description: Search filter for Status
        required: false
      - schema:
          type: string
        in: query
        name: bookGuestsId
        description: Search filter for Guest
        required: false
      - schema:
          type: string
        in: query
        name: bookGuestsId__usr_last_name
        description: Search filter for Last name
        required: false
      - schema:
          type: string
        in: query
        name: bookGuestsId__usr_first_name
        description: Search filter for First name
        required: false
      - schema:
          type: string
        in: query
        name: bookGuestsId__bookBookusersEmail
        description: Search filter for Guest email
        required: false
      - schema:
          type: string
        in: query
        name: bookBookingsGuestsBookRoomId
        description: Search filter for Room
        required: false
      - schema:
          type: string
        in: query
        name: bookBookingsGuestsBookRoomId__bookRoomCode
        description: Search filter for Room Code
        required: false
      - schema:
          type: string
        in: query
        name: bookBookingsGuestsBookRoomId__bookRoomLabel
        description: Search filter for Room Label
        required: false
      - schema:
          type: string
        in: query
        name: bookBookingsGuestsBookRoomId__bookRoomBookRoomTypeId
        description: Search filter for Room Room Type
        required: false
      - schema:
          type: string
        in: query
        name: bookBookingsGuestsBookRoomId__bookRoomBookRoomTypeId__bookRoomtypType
        description: Search filter for Room Type
        required: false
      - schema:
          type: string
          enum:
          - '12'
          - '15'
          - '17'
          - '22'
        in: query
        name: bookBookingsGuestsBookRoomId__bookRoomSuperficie
        description: Search filter for Room Surface area
        required: false
      - schema:
          type: string
          enum:
          - '0'
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
        in: query
        name: bookBookingsGuestsBookRoomId__bookRoomFloor
        description: Search filter for Room Floor
        required: false
      - schema:
          type: string
        in: query
        name: bookBookingsGuestsBookRoomId__bookRoomPhoto
        description: Search filter for Room Photo
        required: false
      - schema:
          type: number
        in: query
        name: bookBookingsGuestsBookRoomId__bookRoomPriceht
        description: Search filter for Room Price
        required: false
      tags:
      - BookBookingsBookGuests
  /rest/BookGuests/{row_id}/placemap:BookUsersMaps:
    get:
      summary: Call a place map for BookGuests business object
      security:
      - bearerAuth: []
      operationId: obj-bookguests-placemap-bookusersmaps
      responses:
        '200':
          description: Success in calling the place map adat
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaceMapData'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookGuests
  /rest/BookPayments/{row_id}:
    post:
      summary: Create a new BookPaymentsbusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookPayments'
      operationId: obj-bookpayments-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookPayments'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookPayments
    get:
      summary: Get a BookPayments business object record
      security:
      - bearerAuth: []
      operationId: obj-bookpayments-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookPayments'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - BookPayments
    delete:
      summary: Delete a BookPayments business object record
      security:
      - bearerAuth: []
      operationId: obj-bookpayments-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookPayments
    put:
      summary: Update a BookPaymentsbusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookPayments'
      operationId: obj-bookpayments-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookPayments'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookPayments
  /rest/BookBookingsHistoric/{row_id}:
    post:
      summary: Create a new BookBookingsHistoricbusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookBookingsHistoric'
      operationId: obj-bookbookingshistoric-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookBookingsHistoric'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookBookingsHistoric
    get:
      summary: Get a BookBookingsHistoric business object record
      security:
      - bearerAuth: []
      operationId: obj-bookbookingshistoric-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookBookingsHistoric'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - BookBookingsHistoric
    delete:
      summary: Delete a BookBookingsHistoric business object record
      security:
      - bearerAuth: []
      operationId: obj-bookbookingshistoric-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookBookingsHistoric
    put:
      summary: Update a BookBookingsHistoricbusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookBookingsHistoric'
      operationId: obj-bookbookingshistoric-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookBookingsHistoric'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookBookingsHistoric
info:
  license:
    name: Simplicite license
    url: http://www.simplicitesoftware.com
  contact:
    name: Simplicite Software
    url: http://www.simplicitesoftware.com
    email: contact@simplicitesoftware.com
  description: API for module Booking
  title: Booking
  version: '0.1'
tags:
- name: BookBookings
  description: Booking request
- name: BookBookingsBookGuests
  description: Booking
- name: BookBookingsHistoric
  description: History
- name: BookEquRoom
  description: Equipment/Room
- name: BookGuests
  description: Guests
- name: BookPaymentMethod
  description: Payment method
- name: BookPayments
  description: Payment
- name: BookRoom
  description: Room
- name: BookRoomBookRoomService
  description: Service/Room
- name: BookRoomEquipment
  description: Equipment
- name: BookRoomService
  description: Services
- name: BookRoomType
  description: Room Type
- name: BookUsers
  description: Customer
