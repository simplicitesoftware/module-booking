#  ___ _            _ _    _ _    __
# / __(_)_ __  _ __| (_)__(_) |_ /_/
# \__ \ | '  \| '_ \ | / _| |  _/ -_)
# |___/_|_|_|_| .__/_|_\__|_|\__\___|
#             |_| Module: Booking 0.1
components:
  schemas:
    Error404:
      type: object
      properties:
        error:
          description: Error message
          type: string
        status:
          description: Error status
          type: integer
          enum:
          - 404
    BookPaymentMethod:
      type: object
      properties:
        bookPaymCode:
          description: book paym code
          type: string
        row_id:
          description: Unique technical row ID
          type: string
        bookPaymLibell:
          description: book paym libell
          type: string
    ArrayOfBookGuests:
      type: array
      items:
        $ref: '#/components/schemas/BookGuests'
    BookRoomEquipment:
      type: object
      properties:
        bookEquLibell:
          description: book equ libell
          type: string
        row_id:
          description: Unique technical row ID
          type: string
        bookEquCode:
          description: book equ code
          type: string
    BookGuests:
      type: object
      properties:
        usr_home_num:
          description: Home phone
          type: string
        usr_country:
          description: Country
          type: string
          enum:
          - FR
          - UK
          - ES
          - DE
          - BE
          - CH
          - IE
          - CA
          - US
        usr_title:
          description: Title
          type: string
          enum:
          - MR
          - MRS
          - MS
        usr_zipcode:
          description: Postal/ZIP code
          type: string
        usr_address1:
          description: Address line 1
          type: string
        usr_address2:
          description: Address line 2
          type: string
        usr_last_name:
          description: Last name
          type: string
        usr_cell_num:
          description: Mobile/cellular phone number
          type: string
        usr_city:
          description: City
          type: string
        bookBookusersEmail:
          description: book bookusers email
          type: string
        bookUserGeoCoord:
          description: book user geo coord
          type: string
          example: latitude;longitude
        row_id:
          description: Unique technical row ID
          type: string
        usr_work_num:
          description: Work phone number
          type: string
        usr_state:
          description: State
          type: string
        usr_first_name:
          description: First name
          type: string
        bookBookusersType:
          description: book bookusers type
          type: string
          enum:
          - CUS
          - ACC
    BookBookingsBookGuests:
      type: object
      properties:
        bookGuestsId__usr_first_name:
          description: First name
          type: string
        bookBookingsfk__BookBookings_BookUsers_id__bookBookusersEmail:
          description: app book bookings fk Book users book bookusers email
          type: string
        bookGuestsId__usr_last_name:
          description: Last name
          type: string
        bookBookingsBookGuestsBookRoomId__bookRoomSuperficie:
          description: Room|Rooms book room superficie
          type: string
          enum:
          - '12'
          - '15'
          - '17'
          - '22'
        bookBookingsfk__bookBookbookingsEndDate:
          description: app book bookings fk book bookbookings end date
          type: string
          example: yyyy-MM-dd HH:mm:ss
        bookBookingsBookGuestsBookRoomId__bookRoomLabel:
          description: Room|Rooms book room label
          type: string
        bookBookingsfk__bookBookbookingsHour:
          description: app book bookings fk book bookbookings hour
          type: string
          example: HH:mm:ss
        bookBookingsfk__BookBookings_BookUsers_id__usr_last_name:
          description: Last name
          type: string
        bookBookingsfk:
          description: app book bookings fk
          type: string
        bookBookingsBookGuestsBookRoomId__BookRoom_BookRoomType_id:
          description: Room|Rooms Room Type
          type: string
        bookBookingsBookGuestsBookRoomId__bookRoomFloor:
          description: Room|Rooms book room floor
          type: string
          enum:
          - '0'
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
        bookBookingsBookGuestsBookRoomId__bookRoomPriceht:
          description: Room|Rooms book room priceht
          type: number
        bookGuestsId:
          description: app book guests fk
          type: string
        bookBookingsfk__BookBookings_BookUsers_id__usr_first_name:
          description: First name
          type: string
        bookBookingsfk__BookBookings_BookUsers_id:
          description: app book bookings fk Book users
          type: string
        bookBookingsBookGuestsBookRoomId__bookRoomPhoto:
          description: Room|Rooms book room photo
          type: object
        bookBookingsfk__bookBookbookingsDate:
          description: app book bookings fk book bookbookings date
          type: string
          example: yyyy-MM-dd
        bookBookingsBookGuestsBookRoomId__BookRoom_BookRoomType_id__bookRoomtypType:
          description: Room|Rooms Room Type book roomtyp type
          type: string
        bookBookingsfk__bookBookbookingsStartDate:
          description: app book bookings fk book bookbookings start date
          type: string
          example: yyyy-MM-dd HH:mm:ss
        bookGuestsId__bookBookusersEmail:
          description: app book guests fk book bookusers email
          type: string
        row_id:
          description: Unique technical row ID
          type: string
        bookBookingsBookGuestsBookRoomId:
          description: Room|Rooms
          type: string
        bookBookingsBookGuestsBookRoomId__bookRoomCode:
          description: Room|Rooms book room code
          type: string
        bookBookingsfk__bookBookbookingsStatut:
          description: app book bookings fk book bookbookings statut
          type: string
          enum:
          - EA
          - TR
          - Cl
    ArrayOfBookUsers:
      type: array
      items:
        $ref: '#/components/schemas/BookUsers'
    PublicationResult:
      type: object
      properties:
        mime:
          description: MIME type
          type: string
        content:
          description: Content (plain text or base64 encoded)
          type: string
    ArrayOfBookRoom:
      type: array
      items:
        $ref: '#/components/schemas/BookRoom'
    BookRoomBookRoomService:
      type: object
      properties:
        app_BookRoom_fk:
          description: app book room fk
          type: string
        app_BookRoom_fk__bookRoomCode:
          description: app book room fk book room code
          type: string
        app_BookRoomService_fk__bookRservCode:
          description: app book room service fk book rserv code
          type: string
        row_id:
          description: Unique technical row ID
          type: string
        app_BookRoomService_fk:
          description: app book room service fk
          type: string
    BookRoom:
      type: object
      properties:
        BookRoom_BookRoomType_id:
          description: Room Type
          type: string
        BookRoom_BookRoomType_id__bookRoomtypType:
          description: Room Type book roomtyp type
          type: string
        bookRoomFloor:
          description: book room floor
          type: string
          enum:
          - '0'
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
        bookRoomLabel:
          description: book room label
          type: string
        BookRoom_BookRoomType_id__bookRoomtypCode:
          description: Room Type book roomtyp code
          type: string
        bookRoomSuperficie:
          description: book room superficie
          type: string
          enum:
          - '12'
          - '15'
          - '17'
          - '22'
        bookRoomCode:
          description: book room code
          type: string
        bookRoomPhoto:
          description: book room photo
          type: object
        row_id:
          description: Unique technical row ID
          type: string
        bookRoomDesc:
          description: book room desc
          type: string
        bookRoomPriceht:
          description: book room priceht
          type: number
    ArrayOfBookBookingsBookGuests:
      type: array
      items:
        $ref: '#/components/schemas/BookBookingsBookGuests'
    ArrayOfBookBookings:
      type: array
      items:
        $ref: '#/components/schemas/BookBookings'
    Error400:
      type: object
      properties:
        error:
          description: Error message
          type: string
        status:
          description: Error status
          type: integer
          enum:
          - 400
    Error401:
      type: object
      properties:
        error:
          description: Error message
          type: string
        status:
          description: Error status
          type: integer
          enum:
          - 401
    Error500:
      type: object
      properties:
        error:
          description: Error message
          type: string
        status:
          description: Error status
          type: integer
          enum:
          - 500
    Error403:
      type: object
      properties:
        error:
          description: Error message
          type: string
        status:
          description: Error status
          type: integer
          enum:
          - 403
    ArrayOfBookPaymentMethod:
      type: array
      items:
        $ref: '#/components/schemas/BookPaymentMethod'
    ArrayOfBookRoomEquipment:
      type: array
      items:
        $ref: '#/components/schemas/BookRoomEquipment'
    ArrayOfBookRoomType:
      type: array
      items:
        $ref: '#/components/schemas/BookRoomType'
    ArrayOfBookRoomBookRoomService:
      type: array
      items:
        $ref: '#/components/schemas/BookRoomBookRoomService'
    ArrayOfBookEquRoom:
      type: array
      items:
        $ref: '#/components/schemas/BookEquRoom'
    BookEquRoom:
      type: object
      properties:
        bookEquroomRoomId:
          description: book equroom room id
          type: string
        bookEquroomEquId__bookEquCode:
          description: book equroom equ id book equ code
          type: string
        bookEquroomEquId:
          description: book equroom equ id
          type: string
        bookEquroomRoomId__bookRoomCode:
          description: book equroom room id book room code
          type: string
        row_id:
          description: Unique technical row ID
          type: string
    BookBookings:
      type: object
      properties:
        bookBookbookingsGuestNumber:
          description: book bookbookings guest number
          type: string
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
        bookBookbookingsDate:
          description: book bookbookings date
          type: string
          example: yyyy-MM-dd
        bookBookbookingsPaymentTDate:
          description: book bookbookings payment Tdate
          type: string
          example: yyyy-MM-dd
        bookBookbookingsComments:
          description: book bookbookings comments
          type: string
        BookBookings_BookUsers_id__usr_last_name:
          description: Last name
          type: string
        bookBookbookingsStatut:
          description: book bookbookings statut
          type: string
          enum:
          - EA
          - TR
          - Cl
        BookBookings_BookUsers_id__usr_title:
          description: Title
          type: string
          enum:
          - MR
          - MRS
          - MS
        bookBookbookingsPaymentDone:
          description: book bookbookings payment done
          type: boolean
        bookBookbookingsHour:
          description: book bookbookings hour
          type: string
          example: HH:mm:ss
        bookBookbookingsStartDate:
          description: book bookbookings start date
          type: string
          example: yyyy-MM-dd HH:mm:ss
        bookBookbookingsRoomNumber:
          description: book bookbookings room number
          type: string
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
        BookBookings_BookUsers_id__usr_first_name:
          description: First name
          type: string
        BookBookings_BookUsers_id__bookBookusersEmail:
          description: Book users book bookusers email
          type: string
        bookBookbookingsAmountDate:
          description: book bookbookings amount date
          type: string
          example: yyyy-MM-dd
        BookBookings_BookUsers_id:
          description: Book users
          type: string
        bookBookbookingsEndDate:
          description: book bookbookings end date
          type: string
          example: yyyy-MM-dd HH:mm:ss
        row_id:
          description: Unique technical row ID
          type: string
    BookBookingsHistoric:
      type: object
      properties:
        bookBookbookingsGuestNumber:
          description: book bookbookings guest number
          type: string
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
        bookBookbookingsDate:
          description: book bookbookings date
          type: string
          example: yyyy-MM-dd
        bookBookbookingsPaymentTDate:
          description: book bookbookings payment Tdate
          type: string
          example: yyyy-MM-dd
        bookBookbookingsComments:
          description: book bookbookings comments
          type: string
        BookBookings_BookUsers_id__usr_last_name:
          description: Last name
          type: string
        created_dt_hist:
          description: Created date
          type: string
          example: yyyy-MM-dd HH:mm:ss
        bookBookbookingsStatut:
          description: book bookbookings statut
          type: string
          enum:
          - EA
          - TR
          - Cl
        row_ref_id:
          description: Record row ID
          type: string
        BookBookings_BookUsers_id__usr_title:
          description: Title
          type: string
          enum:
          - MR
          - MRS
          - MS
        bookBookbookingsPaymentDone:
          description: book bookbookings payment done
          type: boolean
        bookBookbookingsHour:
          description: book bookbookings hour
          type: string
          example: HH:mm:ss
        row_idx:
          description: History record index
          type: integer
        bookBookbookingsStartDate:
          description: book bookbookings start date
          type: string
          example: yyyy-MM-dd HH:mm:ss
        bookBookbookingsRoomNumber:
          description: book bookbookings room number
          type: string
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
        BookBookings_BookUsers_id__usr_first_name:
          description: First name
          type: string
        BookBookings_BookUsers_id__bookBookusersEmail:
          description: Book users book bookusers email
          type: string
        bookBookbookingsAmountDate:
          description: book bookbookings amount date
          type: string
          example: yyyy-MM-dd
        BookBookings_BookUsers_id:
          description: Book users
          type: string
        bookBookbookingsEndDate:
          description: book bookbookings end date
          type: string
          example: yyyy-MM-dd HH:mm:ss
        row_id:
          description: Unique technical row ID
          type: string
        created_by_hist:
          description: Created by
          type: string
    BookUsers:
      type: object
      properties:
        usr_home_num:
          description: Home phone
          type: string
        usr_country:
          description: Country
          type: string
          enum:
          - FR
          - UK
          - ES
          - DE
          - BE
          - CH
          - IE
          - CA
          - US
        usr_title:
          description: Title
          type: string
          enum:
          - MR
          - MRS
          - MS
        usr_zipcode:
          description: Postal/ZIP code
          type: string
        usr_address1:
          description: Address line 1
          type: string
        usr_address2:
          description: Address line 2
          type: string
        usr_last_name:
          description: Last name
          type: string
        usr_cell_num:
          description: Mobile/cellular phone number
          type: string
        usr_city:
          description: City
          type: string
        bookBookusersEmail:
          description: book bookusers email
          type: string
        bookUserGeoCoord:
          description: book user geo coord
          type: string
          example: latitude;longitude
        row_id:
          description: Unique technical row ID
          type: string
        usr_work_num:
          description: Work phone number
          type: string
        usr_state:
          description: State
          type: string
        usr_first_name:
          description: First name
          type: string
        bookBookusersType:
          description: book bookusers type
          type: string
          enum:
          - CUS
          - ACC
    ArrayOfBookPayments:
      type: array
      items:
        $ref: '#/components/schemas/BookPayments'
    BookRoomType:
      type: object
      properties:
        bookRoomtypCode:
          description: book roomtyp code
          type: string
        row_id:
          description: Unique technical row ID
          type: string
        bookRoomtypType:
          description: book roomtyp type
          type: string
    ActionResult:
      type: object
      properties:
        result:
          description: Action result
          type: string
    ArrayOfBookBookingsHistoric:
      type: array
      items:
        $ref: '#/components/schemas/BookBookingsHistoric'
    TreeviewData:
      type: object
      properties:
        item:
          description: Object item with lists of linked objects' items
          type: object
    BookPayments:
      type: object
      properties:
        BookPayments_BookBookings_id__BookBookings_BookUsers_id__usr_first_name:
          description: First name
          type: string
        bookPayAmount:
          description: book pay amount
          type: number
        BookPayments_BookBookings_id__bookBookbookingsHour:
          description: Booking|Bookings book bookbookings hour
          type: string
          example: HH:mm:ss
        BookPayments_BookBookings_id__BookBookings_BookUsers_id:
          description: Booking|Bookings Book users
          type: string
        BookPayments_BookBookings_id__bookBookbookingsEndDate:
          description: Booking|Bookings book bookbookings end date
          type: string
          example: yyyy-MM-dd HH:mm:ss
        bookPayPaymId__bookPaymCode:
          description: Payment method book paym code
          type: string
        BookPayments_BookBookings_id__bookBookbookingsStartDate:
          description: Booking|Bookings book bookbookings start date
          type: string
          example: yyyy-MM-dd HH:mm:ss
        BookPayments_BookBookings_id__BookBookings_BookUsers_id__usr_title:
          description: Title
          type: string
          enum:
          - MR
          - MRS
          - MS
        BookPayments_BookBookings_id__BookBookings_BookUsers_id__usr_last_name:
          description: Last name
          type: string
        BookPayments_BookBookings_id__BookBookings_BookUsers_id__bookBookusersEmail:
          description: Booking|Bookings Book users book bookusers email
          type: string
        BookPayments_BookBookings_id:
          description: Booking|Bookings
          type: string
        bookPayPaymId:
          description: Payment method
          type: string
        row_id:
          description: Unique technical row ID
          type: string
        bookPayComments:
          description: book pay comments
          type: string
        BookPayments_BookBookings_id__bookBookbookingsDate:
          description: Booking|Bookings book bookbookings date
          type: string
          example: yyyy-MM-dd
        bookPayPaymId__bookPaymLibell:
          description: Payment method book paym libell
          type: string
    BookRoomService:
      type: object
      properties:
        bookRservCode:
          description: book rserv code
          type: string
        row_id:
          description: Unique technical row ID
          type: string
        bookRservLibell:
          description: book rserv libell
          type: string
    ArrayOfBookRoomService:
      type: array
      items:
        $ref: '#/components/schemas/BookRoomService'
  securitySchemes:
    basicAuth:
      scheme: basic
      type: http
    bearerAuth:
      bearerFormat: Simplicite token
      scheme: bearer
      type: http
openapi: 3.0.2
paths:
  /rest/BookPaymentMethod/{row_id}:
    post:
      summary: Create a new BookPaymentMethodbusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookPaymentMethod'
      operationId: obj-bookpaymentmethod-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookPaymentMethod'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookPaymentMethod
    get:
      summary: Get a BookPaymentMethod business object record
      security:
      - bearerAuth: []
      operationId: obj-bookpaymentmethod-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookPaymentMethod'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - BookPaymentMethod
    delete:
      summary: Delete a BookPaymentMethod business object record
      security:
      - bearerAuth: []
      operationId: obj-bookpaymentmethod-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookPaymentMethod
    put:
      summary: Update a BookPaymentMethodbusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookPaymentMethod'
      operationId: obj-bookpaymentmethod-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookPaymentMethod'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookPaymentMethod
  /rest/BookRoom:
    get:
      summary: Search BookRoom business object records or get contextualized metadata
      security:
      - bearerAuth: []
      operationId: obj-bookroom-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfBookRoom'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
        in: query
        name: bookRoomCode
        description: Search filter for book room code
        required: false
      - schema:
          type: string
        in: query
        name: bookRoomLabel
        description: Search filter for book room label
        required: false
      - schema:
          type: string
        in: query
        name: BookRoom_BookRoomType_id
        description: Search filter for Room Type
        required: false
      - schema:
          type: string
        in: query
        name: BookRoom_BookRoomType_id__bookRoomtypCode
        description: Search filter for Room Type book roomtyp code
        required: false
      - schema:
          type: string
        in: query
        name: BookRoom_BookRoomType_id__bookRoomtypType
        description: Search filter for Room Type book roomtyp type
        required: false
      - schema:
          type: string
        in: query
        name: bookRoomDesc
        description: Search filter for book room desc
        required: false
      - schema:
          type: string
          enum:
          - '12'
          - '15'
          - '17'
          - '22'
        in: query
        name: bookRoomSuperficie
        description: Search filter for book room superficie
        required: false
      - schema:
          type: string
          enum:
          - '0'
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
        in: query
        name: bookRoomFloor
        description: Search filter for book room floor
        required: false
      - schema:
          type: string
        in: query
        name: bookRoomPhoto
        description: Search filter for book room photo
        required: false
      - schema:
          type: number
        in: query
        name: bookRoomPriceht
        description: Search filter for book room priceht
        required: false
      tags:
      - BookRoom
  /login:
    get:
      summary: Login (obtain bearer token)
      security:
      - basicAuth: []
      operationId: login
      responses:
        '200':
          description: Successful login
          content:
            application/json: {}
            text/plain: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
      parameters:
      - schema:
          type: string
          enum:
          - json
          - oauth2
          - token
        in: query
        name: _output
        description: Optional output format
        required: false
      tags:
      - session
  /rest/BookRoomBookRoomService/{row_id}:
    post:
      summary: Create a new BookRoomBookRoomServicebusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookRoomBookRoomService'
      operationId: obj-bookroombookroomservice-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookRoomBookRoomService'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookRoomBookRoomService
    get:
      summary: Get a BookRoomBookRoomService business object record
      security:
      - bearerAuth: []
      operationId: obj-bookroombookroomservice-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookRoomBookRoomService'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - BookRoomBookRoomService
    delete:
      summary: Delete a BookRoomBookRoomService business object record
      security:
      - bearerAuth: []
      operationId: obj-bookroombookroomservice-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookRoomBookRoomService
    put:
      summary: Update a BookRoomBookRoomServicebusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookRoomBookRoomService'
      operationId: obj-bookroombookroomservice-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookRoomBookRoomService'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookRoomBookRoomService
  /rest/BookGuests:
    get:
      summary: Search BookGuests business object records or get contextualized metadata
      security:
      - bearerAuth: []
      operationId: obj-bookguests-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfBookGuests'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
          enum:
          - MR
          - MRS
          - MS
        in: query
        name: usr_title
        description: Search filter for Title
        required: false
      - schema:
          type: string
        in: query
        name: usr_last_name
        description: Search filter for Last name
        required: false
      - schema:
          type: string
        in: query
        name: usr_first_name
        description: Search filter for First name
        required: false
      - schema:
          type: string
        in: query
        name: usr_work_num
        description: Search filter for Work phone number
        required: false
      - schema:
          type: string
        in: query
        name: usr_home_num
        description: Search filter for Home phone
        required: false
      - schema:
          type: string
        in: query
        name: usr_cell_num
        description: Search filter for Mobile/cellular phone number
        required: false
      - schema:
          type: string
        in: query
        name: usr_address1
        description: Search filter for Address line 1
        required: false
      - schema:
          type: string
        in: query
        name: usr_address2
        description: Search filter for Address line 2
        required: false
      - schema:
          type: string
        in: query
        name: usr_zipcode
        description: Search filter for Postal/ZIP code
        required: false
      - schema:
          type: string
        in: query
        name: usr_city
        description: Search filter for City
        required: false
      - schema:
          type: string
        in: query
        name: usr_state
        description: Search filter for State
        required: false
      - schema:
          type: string
          enum:
          - FR
          - UK
          - ES
          - DE
          - BE
          - CH
          - IE
          - CA
          - US
        in: query
        name: usr_country
        description: Search filter for Country
        required: false
      - schema:
          type: string
        in: query
        name: bookBookusersEmail
        description: Search filter for book bookusers email
        required: false
      - schema:
          type: string
          enum:
          - CUS
          - ACC
        in: query
        name: bookBookusersType
        description: Search filter for book bookusers type
        required: false
      - schema:
          type: string
        in: query
        name: bookUserGeoCoord
        description: Search filter for book user geo coord
        required: false
      tags:
      - BookGuests
  /rest/BookRoomEquipment:
    get:
      summary: Search BookRoomEquipment business object records or get contextualized
        metadata
      security:
      - bearerAuth: []
      operationId: obj-bookroomequipment-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfBookRoomEquipment'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
        in: query
        name: bookEquLibell
        description: Search filter for book equ libell
        required: false
      - schema:
          type: string
        in: query
        name: bookEquCode
        description: Search filter for book equ code
        required: false
      tags:
      - BookRoomEquipment
  /rest/BookRoomBookRoomService:
    get:
      summary: Search BookRoomBookRoomService business object records or get contextualized
        metadata
      security:
      - bearerAuth: []
      operationId: obj-bookroombookroomservice-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfBookRoomBookRoomService'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
        in: query
        name: app_BookRoom_fk
        description: Search filter for app book room fk
        required: false
      - schema:
          type: string
        in: query
        name: app_BookRoom_fk__bookRoomCode
        description: Search filter for app book room fk book room code
        required: false
      - schema:
          type: string
        in: query
        name: app_BookRoomService_fk
        description: Search filter for app book room service fk
        required: false
      - schema:
          type: string
        in: query
        name: app_BookRoomService_fk__bookRservCode
        description: Search filter for app book room service fk book rserv code
        required: false
      tags:
      - BookRoomBookRoomService
  /rest/BookEquRoom:
    get:
      summary: Search BookEquRoom business object records or get contextualized metadata
      security:
      - bearerAuth: []
      operationId: obj-bookequroom-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfBookEquRoom'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
        in: query
        name: bookEquroomEquId
        description: Search filter for book equroom equ id
        required: false
      - schema:
          type: string
        in: query
        name: bookEquroomEquId__bookEquCode
        description: Search filter for book equroom equ id book equ code
        required: false
      - schema:
          type: string
        in: query
        name: bookEquroomRoomId
        description: Search filter for book equroom room id
        required: false
      - schema:
          type: string
        in: query
        name: bookEquroomRoomId__bookRoomCode
        description: Search filter for book equroom room id book room code
        required: false
      tags:
      - BookEquRoom
  /rest/BookRoom/{row_id}:
    post:
      summary: Create a new BookRoombusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookRoom'
      operationId: obj-bookroom-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookRoom'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookRoom
    get:
      summary: Get a BookRoom business object record
      security:
      - bearerAuth: []
      operationId: obj-bookroom-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookRoom'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - BookRoom
    delete:
      summary: Delete a BookRoom business object record
      security:
      - bearerAuth: []
      operationId: obj-bookroom-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookRoom
    put:
      summary: Update a BookRoombusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookRoom'
      operationId: obj-bookroom-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookRoom'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookRoom
  /rest/BookBookingsBookGuests/{row_id}:
    post:
      summary: Create a new BookBookingsBookGuestsbusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookBookingsBookGuests'
      operationId: obj-bookbookingsbookguests-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookBookingsBookGuests'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookBookingsBookGuests
    get:
      summary: Get a BookBookingsBookGuests business object record
      security:
      - bearerAuth: []
      operationId: obj-bookbookingsbookguests-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookBookingsBookGuests'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - BookBookingsBookGuests
    delete:
      summary: Delete a BookBookingsBookGuests business object record
      security:
      - bearerAuth: []
      operationId: obj-bookbookingsbookguests-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookBookingsBookGuests
    put:
      summary: Update a BookBookingsBookGuestsbusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookBookingsBookGuests'
      operationId: obj-bookbookingsbookguests-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookBookingsBookGuests'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookBookingsBookGuests
  /rest/BookBookings:
    get:
      summary: Search BookBookings business object records or get contextualized metadata
      security:
      - bearerAuth: []
      operationId: obj-bookbookings-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfBookBookings'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
        in: query
        name: BookBookings_BookUsers_id
        description: Search filter for Book users
        required: false
      - schema:
          type: string
          enum:
          - MR
          - MRS
          - MS
        in: query
        name: BookBookings_BookUsers_id__usr_title
        description: Search filter for Title
        required: false
      - schema:
          type: string
        in: query
        name: BookBookings_BookUsers_id__usr_last_name
        description: Search filter for Last name
        required: false
      - schema:
          type: string
        in: query
        name: BookBookings_BookUsers_id__usr_first_name
        description: Search filter for First name
        required: false
      - schema:
          type: string
        in: query
        name: BookBookings_BookUsers_id__bookBookusersEmail
        description: Search filter for Book users book bookusers email
        required: false
      - schema:
          type: string
        in: query
        name: bookBookbookingsDate
        description: Search filter for book bookbookings date
        required: false
      - schema:
          type: string
        in: query
        name: bookBookbookingsHour
        description: Search filter for book bookbookings hour
        required: false
      - schema:
          type: string
        in: query
        name: bookBookbookingsStartDate
        description: Search filter for book bookbookings start date
        required: false
      - schema:
          type: string
        in: query
        name: bookBookbookingsEndDate
        description: Search filter for book bookbookings end date
        required: false
      - schema:
          type: string
        in: query
        name: bookBookbookingsPaymentTDate
        description: Search filter for book bookbookings payment Tdate
        required: false
      - schema:
          type: string
        in: query
        name: bookBookbookingsAmountDate
        description: Search filter for book bookbookings amount date
        required: false
      - schema:
          type: boolean
        in: query
        name: bookBookbookingsPaymentDone
        description: Search filter for book bookbookings payment done
        required: false
      - schema:
          type: string
        in: query
        name: bookBookbookingsComments
        description: Search filter for book bookbookings comments
        required: false
      - schema:
          type: string
          enum:
          - EA
          - TR
          - Cl
        in: query
        name: bookBookbookingsStatut
        description: Search filter for book bookbookings statut
        required: false
      - schema:
          type: string
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
        in: query
        name: bookBookbookingsRoomNumber
        description: Search filter for book bookbookings room number
        required: false
      - schema:
          type: string
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
        in: query
        name: bookBookbookingsGuestNumber
        description: Search filter for book bookbookings guest number
        required: false
      tags:
      - BookBookings
  /rest/BookRoomType/{row_id}:
    post:
      summary: Create a new BookRoomTypebusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookRoomType'
      operationId: obj-bookroomtype-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookRoomType'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookRoomType
    get:
      summary: Get a BookRoomType business object record
      security:
      - bearerAuth: []
      operationId: obj-bookroomtype-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookRoomType'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - BookRoomType
    delete:
      summary: Delete a BookRoomType business object record
      security:
      - bearerAuth: []
      operationId: obj-bookroomtype-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookRoomType
    put:
      summary: Update a BookRoomTypebusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookRoomType'
      operationId: obj-bookroomtype-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookRoomType'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookRoomType
  /rest/BookUsers:
    get:
      summary: Search BookUsers business object records or get contextualized metadata
      security:
      - bearerAuth: []
      operationId: obj-bookusers-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfBookUsers'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
          enum:
          - MR
          - MRS
          - MS
        in: query
        name: usr_title
        description: Search filter for Title
        required: false
      - schema:
          type: string
        in: query
        name: usr_last_name
        description: Search filter for Last name
        required: false
      - schema:
          type: string
        in: query
        name: usr_first_name
        description: Search filter for First name
        required: false
      - schema:
          type: string
        in: query
        name: usr_work_num
        description: Search filter for Work phone number
        required: false
      - schema:
          type: string
        in: query
        name: usr_home_num
        description: Search filter for Home phone
        required: false
      - schema:
          type: string
        in: query
        name: usr_cell_num
        description: Search filter for Mobile/cellular phone number
        required: false
      - schema:
          type: string
        in: query
        name: usr_address1
        description: Search filter for Address line 1
        required: false
      - schema:
          type: string
        in: query
        name: usr_address2
        description: Search filter for Address line 2
        required: false
      - schema:
          type: string
        in: query
        name: usr_zipcode
        description: Search filter for Postal/ZIP code
        required: false
      - schema:
          type: string
        in: query
        name: usr_city
        description: Search filter for City
        required: false
      - schema:
          type: string
        in: query
        name: usr_state
        description: Search filter for State
        required: false
      - schema:
          type: string
          enum:
          - FR
          - UK
          - ES
          - DE
          - BE
          - CH
          - IE
          - CA
          - US
        in: query
        name: usr_country
        description: Search filter for Country
        required: false
      - schema:
          type: string
        in: query
        name: bookBookusersEmail
        description: Search filter for book bookusers email
        required: false
      - schema:
          type: string
          enum:
          - CUS
          - ACC
        in: query
        name: bookBookusersType
        description: Search filter for book bookusers type
        required: false
      - schema:
          type: string
        in: query
        name: bookUserGeoCoord
        description: Search filter for book user geo coord
        required: false
      tags:
      - BookUsers
  /rest/BookRoomService:
    get:
      summary: Search BookRoomService business object records or get contextualized
        metadata
      security:
      - bearerAuth: []
      operationId: obj-bookroomservice-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfBookRoomService'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
        in: query
        name: bookRservCode
        description: Search filter for book rserv code
        required: false
      - schema:
          type: string
        in: query
        name: bookRservLibell
        description: Search filter for book rserv libell
        required: false
      tags:
      - BookRoomService
  /rest/BookEquRoom/{row_id}:
    post:
      summary: Create a new BookEquRoombusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookEquRoom'
      operationId: obj-bookequroom-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookEquRoom'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookEquRoom
    get:
      summary: Get a BookEquRoom business object record
      security:
      - bearerAuth: []
      operationId: obj-bookequroom-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookEquRoom'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - BookEquRoom
    delete:
      summary: Delete a BookEquRoom business object record
      security:
      - bearerAuth: []
      operationId: obj-bookequroom-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookEquRoom
    put:
      summary: Update a BookEquRoombusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookEquRoom'
      operationId: obj-bookequroom-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookEquRoom'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookEquRoom
  /rest/BookUsers/{row_id}:
    post:
      summary: Create a new BookUsersbusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookUsers'
      operationId: obj-bookusers-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookUsers'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookUsers
    get:
      summary: Get a BookUsers business object record
      security:
      - bearerAuth: []
      operationId: obj-bookusers-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookUsers'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - BookUsers
    delete:
      summary: Delete a BookUsers business object record
      security:
      - bearerAuth: []
      operationId: obj-bookusers-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookUsers
    put:
      summary: Update a BookUsersbusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookUsers'
      operationId: obj-bookusers-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookUsers'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookUsers
  /rest/BookRoomService/{row_id}:
    post:
      summary: Create a new BookRoomServicebusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookRoomService'
      operationId: obj-bookroomservice-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookRoomService'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookRoomService
    get:
      summary: Get a BookRoomService business object record
      security:
      - bearerAuth: []
      operationId: obj-bookroomservice-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookRoomService'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - BookRoomService
    delete:
      summary: Delete a BookRoomService business object record
      security:
      - bearerAuth: []
      operationId: obj-bookroomservice-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookRoomService
    put:
      summary: Update a BookRoomServicebusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookRoomService'
      operationId: obj-bookroomservice-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookRoomService'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookRoomService
  /rest/BookPaymentMethod:
    get:
      summary: Search BookPaymentMethod business object records or get contextualized
        metadata
      security:
      - bearerAuth: []
      operationId: obj-bookpaymentmethod-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfBookPaymentMethod'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
        in: query
        name: bookPaymCode
        description: Search filter for book paym code
        required: false
      - schema:
          type: string
        in: query
        name: bookPaymLibell
        description: Search filter for book paym libell
        required: false
      tags:
      - BookPaymentMethod
  /rest/BookBookings/{row_id}:
    post:
      summary: Create a new BookBookingsbusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookBookings'
      operationId: obj-bookbookings-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookBookings'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookBookings
    get:
      summary: Get a BookBookings business object record
      security:
      - bearerAuth: []
      operationId: obj-bookbookings-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookBookings'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - BookBookings
    delete:
      summary: Delete a BookBookings business object record
      security:
      - bearerAuth: []
      operationId: obj-bookbookings-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookBookings
    put:
      summary: Update a BookBookingsbusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookBookings'
      operationId: obj-bookbookings-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookBookings'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookBookings
  /rest/BookRoomEquipment/{row_id}:
    post:
      summary: Create a new BookRoomEquipmentbusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookRoomEquipment'
      operationId: obj-bookroomequipment-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookRoomEquipment'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookRoomEquipment
    get:
      summary: Get a BookRoomEquipment business object record
      security:
      - bearerAuth: []
      operationId: obj-bookroomequipment-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookRoomEquipment'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - BookRoomEquipment
    delete:
      summary: Delete a BookRoomEquipment business object record
      security:
      - bearerAuth: []
      operationId: obj-bookroomequipment-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookRoomEquipment
    put:
      summary: Update a BookRoomEquipmentbusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookRoomEquipment'
      operationId: obj-bookroomequipment-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookRoomEquipment'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookRoomEquipment
  /logout:
    get:
      summary: Logout (revoke bearer token)
      security:
      - bearerAuth: []
      operationId: logout
      responses:
        '200':
          description: Successfull logout
          content:
            application/json: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
      tags:
      - session
  /rest/BookGuests/{row_id}:
    post:
      summary: Create a new BookGuestsbusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookGuests'
      operationId: obj-bookguests-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookGuests'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookGuests
    get:
      summary: Get a BookGuests business object record
      security:
      - bearerAuth: []
      operationId: obj-bookguests-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookGuests'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - BookGuests
    delete:
      summary: Delete a BookGuests business object record
      security:
      - bearerAuth: []
      operationId: obj-bookguests-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookGuests
    put:
      summary: Update a BookGuestsbusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookGuests'
      operationId: obj-bookguests-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookGuests'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookGuests
  /rest/BookPayments:
    get:
      summary: Search BookPayments business object records or get contextualized metadata
      security:
      - bearerAuth: []
      operationId: obj-bookpayments-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfBookPayments'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
        in: query
        name: BookPayments_BookBookings_id
        description: Search filter for Booking|Bookings
        required: false
      - schema:
          type: string
        in: query
        name: BookPayments_BookBookings_id__BookBookings_BookUsers_id
        description: Search filter for Booking|Bookings Book users
        required: false
      - schema:
          type: string
        in: query
        name: BookPayments_BookBookings_id__bookBookbookingsDate
        description: Search filter for Booking|Bookings book bookbookings date
        required: false
      - schema:
          type: string
        in: query
        name: BookPayments_BookBookings_id__bookBookbookingsHour
        description: Search filter for Booking|Bookings book bookbookings hour
        required: false
      - schema:
          type: string
          enum:
          - MR
          - MRS
          - MS
        in: query
        name: BookPayments_BookBookings_id__BookBookings_BookUsers_id__usr_title
        description: Search filter for Title
        required: false
      - schema:
          type: string
        in: query
        name: BookPayments_BookBookings_id__BookBookings_BookUsers_id__usr_last_name
        description: Search filter for Last name
        required: false
      - schema:
          type: string
        in: query
        name: BookPayments_BookBookings_id__BookBookings_BookUsers_id__usr_first_name
        description: Search filter for First name
        required: false
      - schema:
          type: string
        in: query
        name: BookPayments_BookBookings_id__BookBookings_BookUsers_id__bookBookusersEmail
        description: Search filter for Booking|Bookings Book users book bookusers
          email
        required: false
      - schema:
          type: string
        in: query
        name: BookPayments_BookBookings_id__bookBookbookingsStartDate
        description: Search filter for Booking|Bookings book bookbookings start date
        required: false
      - schema:
          type: string
        in: query
        name: BookPayments_BookBookings_id__bookBookbookingsEndDate
        description: Search filter for Booking|Bookings book bookbookings end date
        required: false
      - schema:
          type: string
        in: query
        name: bookPayPaymId
        description: Search filter for Payment method
        required: false
      - schema:
          type: string
        in: query
        name: bookPayPaymId__bookPaymCode
        description: Search filter for Payment method book paym code
        required: false
      - schema:
          type: string
        in: query
        name: bookPayPaymId__bookPaymLibell
        description: Search filter for Payment method book paym libell
        required: false
      - schema:
          type: number
        in: query
        name: bookPayAmount
        description: Search filter for book pay amount
        required: false
      - schema:
          type: string
        in: query
        name: bookPayComments
        description: Search filter for book pay comments
        required: false
      tags:
      - BookPayments
  /rest/BookBookingsHistoric:
    get:
      summary: Search BookBookingsHistoric business object records or get contextualized
        metadata
      security:
      - bearerAuth: []
      operationId: obj-bookbookingshistoric-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfBookBookingsHistoric'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
        in: query
        name: row_ref_id
        description: Search filter for Record row ID
        required: false
      - schema:
          type: integer
        in: query
        name: row_idx
        description: Search filter for History record index
        required: false
      - schema:
          type: string
        in: query
        name: created_by_hist
        description: Search filter for Created by
        required: false
      - schema:
          type: string
        in: query
        name: created_dt_hist
        description: Search filter for Created date
        required: false
      - schema:
          type: string
        in: query
        name: BookBookings_BookUsers_id
        description: Search filter for Book users
        required: false
      - schema:
          type: string
          enum:
          - MR
          - MRS
          - MS
        in: query
        name: BookBookings_BookUsers_id__usr_title
        description: Search filter for Title
        required: false
      - schema:
          type: string
        in: query
        name: BookBookings_BookUsers_id__usr_last_name
        description: Search filter for Last name
        required: false
      - schema:
          type: string
        in: query
        name: BookBookings_BookUsers_id__usr_first_name
        description: Search filter for First name
        required: false
      - schema:
          type: string
        in: query
        name: BookBookings_BookUsers_id__bookBookusersEmail
        description: Search filter for Book users book bookusers email
        required: false
      - schema:
          type: string
        in: query
        name: bookBookbookingsDate
        description: Search filter for book bookbookings date
        required: false
      - schema:
          type: string
        in: query
        name: bookBookbookingsHour
        description: Search filter for book bookbookings hour
        required: false
      - schema:
          type: string
        in: query
        name: bookBookbookingsStartDate
        description: Search filter for book bookbookings start date
        required: false
      - schema:
          type: string
        in: query
        name: bookBookbookingsEndDate
        description: Search filter for book bookbookings end date
        required: false
      - schema:
          type: string
        in: query
        name: bookBookbookingsPaymentTDate
        description: Search filter for book bookbookings payment Tdate
        required: false
      - schema:
          type: string
        in: query
        name: bookBookbookingsAmountDate
        description: Search filter for book bookbookings amount date
        required: false
      - schema:
          type: boolean
        in: query
        name: bookBookbookingsPaymentDone
        description: Search filter for book bookbookings payment done
        required: false
      - schema:
          type: string
        in: query
        name: bookBookbookingsComments
        description: Search filter for book bookbookings comments
        required: false
      - schema:
          type: string
          enum:
          - EA
          - TR
          - Cl
        in: query
        name: bookBookbookingsStatut
        description: Search filter for book bookbookings statut
        required: false
      - schema:
          type: string
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
        in: query
        name: bookBookbookingsRoomNumber
        description: Search filter for book bookbookings room number
        required: false
      - schema:
          type: string
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
          - '10'
        in: query
        name: bookBookbookingsGuestNumber
        description: Search filter for book bookbookings guest number
        required: false
      tags:
      - BookBookingsHistoric
  /rest/BookRoomType:
    get:
      summary: Search BookRoomType business object records or get contextualized metadata
      security:
      - bearerAuth: []
      operationId: obj-bookroomtype-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfBookRoomType'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
        in: query
        name: bookRoomtypCode
        description: Search filter for book roomtyp code
        required: false
      - schema:
          type: string
        in: query
        name: bookRoomtypType
        description: Search filter for book roomtyp type
        required: false
      tags:
      - BookRoomType
  /:
    get:
      summary: Get user session information
      security:
      - bearerAuth: []
      operationId: info
      responses:
        '200':
          description: Success in getting user session information
          content:
            application/json: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
      parameters:
      - schema:
          type: boolean
        in: query
        name: texts
        description: Texts?
        required: false
      tags:
      - session
  /rest/BookBookingsBookGuests:
    get:
      summary: Search BookBookingsBookGuests business object records or get contextualized
        metadata
      security:
      - bearerAuth: []
      operationId: obj-bookbookingsbookguests-search
      responses:
        '200':
          description: Success in searching business object records (or in getting
            contextualized business object metadata, documentation, ...)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfBookBookingsBookGuests'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: boolean
        in: query
        name: _metadata
        description: Metadata?
        required: false
      - schema:
          type: boolean
        in: query
        name: _count
        description: Count?
        required: false
      - schema:
          type: boolean
        in: query
        name: _doc
        description: Documentation?
        required: false
      - schema:
          type: string
          enum:
          - BookBookings-TC
        in: query
        name: _crosstab
        description: Apply pivot table
        required: false
      - schema:
          type: boolean
        in: query
        name: _crosstabcubes
        description: Pivot table data as cubes?
        required: false
      - schema:
          type: string
        in: query
        name: bookBookingsfk
        description: Search filter for app book bookings fk
        required: false
      - schema:
          type: string
        in: query
        name: bookBookingsfk__BookBookings_BookUsers_id
        description: Search filter for app book bookings fk Book users
        required: false
      - schema:
          type: string
        in: query
        name: bookBookingsfk__BookBookings_BookUsers_id__usr_last_name
        description: Search filter for Last name
        required: false
      - schema:
          type: string
        in: query
        name: bookBookingsfk__BookBookings_BookUsers_id__usr_first_name
        description: Search filter for First name
        required: false
      - schema:
          type: string
        in: query
        name: bookBookingsfk__BookBookings_BookUsers_id__bookBookusersEmail
        description: Search filter for app book bookings fk Book users book bookusers
          email
        required: false
      - schema:
          type: string
        in: query
        name: bookBookingsfk__bookBookbookingsDate
        description: Search filter for app book bookings fk book bookbookings date
        required: false
      - schema:
          type: string
        in: query
        name: bookBookingsfk__bookBookbookingsHour
        description: Search filter for app book bookings fk book bookbookings hour
        required: false
      - schema:
          type: string
        in: query
        name: bookBookingsfk__bookBookbookingsStartDate
        description: Search filter for app book bookings fk book bookbookings start
          date
        required: false
      - schema:
          type: string
        in: query
        name: bookBookingsfk__bookBookbookingsEndDate
        description: Search filter for app book bookings fk book bookbookings end
          date
        required: false
      - schema:
          type: string
          enum:
          - EA
          - TR
          - Cl
        in: query
        name: bookBookingsfk__bookBookbookingsStatut
        description: Search filter for app book bookings fk book bookbookings statut
        required: false
      - schema:
          type: string
        in: query
        name: bookGuestsId
        description: Search filter for app book guests fk
        required: false
      - schema:
          type: string
        in: query
        name: bookGuestsId__usr_last_name
        description: Search filter for Last name
        required: false
      - schema:
          type: string
        in: query
        name: bookGuestsId__usr_first_name
        description: Search filter for First name
        required: false
      - schema:
          type: string
        in: query
        name: bookGuestsId__bookBookusersEmail
        description: Search filter for app book guests fk book bookusers email
        required: false
      - schema:
          type: string
        in: query
        name: bookBookingsBookGuestsBookRoomId
        description: Search filter for Room|Rooms
        required: false
      - schema:
          type: string
        in: query
        name: bookBookingsBookGuestsBookRoomId__bookRoomCode
        description: Search filter for Room|Rooms book room code
        required: false
      - schema:
          type: string
        in: query
        name: bookBookingsBookGuestsBookRoomId__bookRoomLabel
        description: Search filter for Room|Rooms book room label
        required: false
      - schema:
          type: string
        in: query
        name: bookBookingsBookGuestsBookRoomId__BookRoom_BookRoomType_id__bookRoomtypType
        description: Search filter for Room|Rooms Room Type book roomtyp type
        required: false
      - schema:
          type: string
        in: query
        name: bookBookingsBookGuestsBookRoomId__BookRoom_BookRoomType_id
        description: Search filter for Room|Rooms Room Type
        required: false
      - schema:
          type: string
          enum:
          - '12'
          - '15'
          - '17'
          - '22'
        in: query
        name: bookBookingsBookGuestsBookRoomId__bookRoomSuperficie
        description: Search filter for Room|Rooms book room superficie
        required: false
      - schema:
          type: string
          enum:
          - '0'
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
        in: query
        name: bookBookingsBookGuestsBookRoomId__bookRoomFloor
        description: Search filter for Room|Rooms book room floor
        required: false
      - schema:
          type: string
        in: query
        name: bookBookingsBookGuestsBookRoomId__bookRoomPhoto
        description: Search filter for Room|Rooms book room photo
        required: false
      - schema:
          type: number
        in: query
        name: bookBookingsBookGuestsBookRoomId__bookRoomPriceht
        description: Search filter for Room|Rooms book room priceht
        required: false
      tags:
      - BookBookingsBookGuests
  /rest/BookPayments/{row_id}:
    post:
      summary: Create a new BookPaymentsbusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookPayments'
      operationId: obj-bookpayments-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookPayments'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookPayments
    get:
      summary: Get a BookPayments business object record
      security:
      - bearerAuth: []
      operationId: obj-bookpayments-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookPayments'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - BookPayments
    delete:
      summary: Delete a BookPayments business object record
      security:
      - bearerAuth: []
      operationId: obj-bookpayments-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookPayments
    put:
      summary: Update a BookPaymentsbusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookPayments'
      operationId: obj-bookpayments-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookPayments'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookPayments
  /rest/BookBookingsHistoric/{row_id}:
    post:
      summary: Create a new BookBookingsHistoricbusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookBookingsHistoric'
      operationId: obj-bookbookingshistoric-create
      responses:
        '200':
          description: Success in creating a new business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookBookingsHistoric'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookBookingsHistoric
    get:
      summary: Get a BookBookingsHistoric business object record
      security:
      - bearerAuth: []
      operationId: obj-bookbookingshistoric-get
      responses:
        '200':
          description: Success in getting a single business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookBookingsHistoric'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      - schema:
          type: boolean
        in: query
        name: _inline_documents
        description: Inline documents?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_thumbnails
        description: Inline documents' thumbnails?
        required: false
      - schema:
          type: boolean
        in: query
        name: _inline_objects
        description: Inline objects?
        required: false
      tags:
      - BookBookingsHistoric
    delete:
      summary: Delete a BookBookingsHistoric business object record
      security:
      - bearerAuth: []
      operationId: obj-bookbookingshistoric-delete
      responses:
        '200':
          description: Success in deleting a business object record
          content:
            application/json: {}
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookBookingsHistoric
    put:
      summary: Update a BookBookingsHistoricbusiness object record
      security:
      - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookBookingsHistoric'
      operationId: obj-bookbookingshistoric-update
      responses:
        '200':
          description: Success in updating a business object record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookBookingsHistoric'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
      parameters:
      - schema:
          type: string
        in: path
        name: row_id
        description: Row ID (or empty or _ for all row IDs)
        required: true
      tags:
      - BookBookingsHistoric
info:
  license:
    name: Simplicite license
    url: http://www.simplicitesoftware.com
  contact:
    name: Simplicite Software
    url: http://www.simplicitesoftware.com
    email: contact@simplicitesoftware.com
  description: API for module Booking
  title: Booking
  version: '0.1'
tags:
- name: BookBookings
  description: Booking
- name: BookBookingsBookGuests
  description: App book bookings book guests
- name: BookBookingsHistoric
  description: History
- name: BookEquRoom
  description: Book equ room
- name: BookGuests
  description: Guests
- name: BookPaymentMethod
  description: Payment method
- name: BookPayments
  description: Book payments
- name: BookRoom
  description: Room
- name: BookRoomBookRoomService
  description: App book room book room service
- name: BookRoomEquipment
  description: Book room equipment
- name: BookRoomService
  description: Book room service
- name: BookRoomType
  description: Room Type
- name: BookUsers
  description: Book users
